[build-system]
build-backend = "hatchling.build"
requires = [ "hatch-vcs", "hatchling" ]

[project]
name = "prismo"
description = "Factor Analysis Models"
readme = "README.md"
license = { file = "LICENSE" }
maintainers = [
  { name = "Ilia Kats", email = "i.kats@dkfz.de" },
]
authors = [
  { name = "Ilia Kats", email = "i.kats@dkfz.de" },
  { name = "Arber Qoku", email = "arber.qoku@dkfz.de" },
  { name = "Florin Walter", email = "florin.walter@dkfz.de" },
  { name = "Martin Rohbeck", email = "martin.rohbeck@dkfz.de" },
]
requires-python = ">=3.11"
classifiers = [
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
]
dynamic = [ "version" ]
dependencies = [
  "anndata>=0.11",
  "array-api-compat",
  "dtw-python",
  "gpytorch",
  "h5py",
  "mizani",
  "mudata @ git+https://github.com/scverse/mudata", # need mudata > 0.3.1
  "numpy",
  "packaging",
  "pandas",
  "platformdirs",
  "plotnine",
  "pyro-ppl",
  "scikit-learn",
  "scipy>=1.8",
  "session-info2",                                  # for debug logging (referenced from the issue template)
  "statsmodels",
  "torch",
  "tqdm",
]

optional-dependencies.dev = [
  "coverage",
  "pre-commit",
  "twine>=4.0.2",
]
optional-dependencies.doc = [
  "docutils>=0.8,!=0.18.*,!=0.19.*",
  "ipykernel",
  "ipython",
  "myst-nb>=1.1",
  "pandas",
  "setuptools",                      # Until pybtex >0.23.0 releases: https://bitbucket.org/pybtex-devs/pybtex/issues/169/
  "sphinx>=4",
  "sphinx-autodoc-typehints",
  "sphinx-automodapi",
  "sphinx-book-theme>=1",
  "sphinx-copybutton",
  "sphinx-tabs",
  "sphinxcontrib-bibtex>=1",
  "sphinxext-opengraph",
]
optional-dependencies.lazy = [
  "dask[array,dataframe]",
  "sparse",
]
optional-dependencies.test = [
  "coverage",
  "pytest",
]
urls.Documentation = "https://prismo.readthedocs.io/"
urls.Home-page = "https://github.com/bioFAM/prismo"
urls.Source = "https://github.com/bioFAM/prismo"

[tool.hatch.build.hooks.vcs]
version-file = "src/prismo/_version.py"

[tool.hatch.version]
source = "vcs"

[tool.hatch.metadata]
allow-direct-references = true

[tool.ruff]
line-length = 120
src = [ "src" ]
extend-include = [ "*.ipynb" ]

format.skip-magic-trailing-comma = true
format.exclude = [ "*.ipynb" ]
format.docstring-code-format = true
lint.select = [
  "B",      # flake8-bugbear
  "BLE",    # flake8-blind-except
  "C4",     # flake8-comprehensions
  "D",      # pydocstyle
  "E",      # Error detected by Pycodestyle
  "F",      # Errors detected by Pyflakes
  "I",      # isort
  "RUF100", # Report unused noqa directives
  "TID",    # flake8-tidy-imports
  "UP",     # pyupgrade
  "W",      # Warning detected by Pycodestyle
]
lint.ignore = [
  "B008", # Errors from function calls in argument defaults. These are fine when the result is immutable.
  "D100", # Missing docstring in public module
  "D104", # Missing docstring in public package
  "D105", # __magic__ methods are often self-explanatory, allow missing docstrings
  "D107", # Missing docstring in __init__
  # Disable one in each pair of mutually incompatible rules
  "D203",   # We donâ€™t want a blank line before a class docstring
  "D213",   # We want docstrings to start immediately after the opening triple quote
  "D400",   # first line should end with a period [Bug: doesn't work with single-line docstrings]
  "D401",   # First line should be in imperative mood; try rephrasing
  "E501",   # line too long -> we accept long comment lines; formatter gets rid of long code lines
  "E731",   # Do not assign a lambda expression, use a def -> lambda expression assignments are convenient
  "E741",   # allow I, O, l as variable names -> I is the identity matrix
  "TID252", # allow relative imports
]
lint.per-file-ignores."*/__init__.py" = [ "F401" ]
lint.per-file-ignores."docs/*" = [ "I" ]
lint.per-file-ignores."docs/extensions/*" = [ "D" ]
lint.per-file-ignores."docs/notebooks/*" = [ "D", "F403", "F405" ]
lint.per-file-ignores."tests/*" = [ "D" ]
lint.pydocstyle.convention = "google"

[tool.pytest.ini_options]
testpaths = [ "tests" ]
xfail_strict = true
addopts = [
  "--import-mode=importlib", # allow using test files with same name
]

[tool.coverage.run]
source = [ "prismo" ]
omit = [
  "**/test_*.py",
]

[tool.cruft]
skip = [
  "tests",
  "src/**/__init__.py",
  "src/**/basic.py",
  "docs/api.md",
  "docs/changelog.md",
  "docs/references.bib",
  "docs/references.md",
  "docs/notebooks/example.ipynb",
]
